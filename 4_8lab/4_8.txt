Ответы на 4 лабу ООП

Каково назначение перегрузки операторов?
Нужно для удобства программиста .

Как используется ключевое слово operator?
Ключевое слово operator используется для перегрузки операторов

Какие операции нельзя перегружать в C#?
[], ->, (), += -= *= /= и тд.

Можно ли перегрузкой отменить очередность выполнения операции?
Нет

Истинно ли следующее утверждение: операция >= может быть перегружена.
Да

Сколько аргументов требуется для определения перегруженной унарной операции?
1

Можно ли перегружать операцию []?
Индексатор (нет)

Можно ли перегружать операцию ->?
нет

Приведите пример оператора приведения типа
public static MyArr operator -(MyArr obj1, MyArr obj2)

{

MyArr arr = new MyArr();

arr.x = obj1.x - obj2.x;

arr.y = obj1.y - obj2.y;

arr.z = obj1.z - obj2.z;

return arr;

}

Что такое метод расширения? Как и где его можно использовать?
Методы расширения (extension methods) позволяют добавлять новые методы в уже существующие типы без создания нового производного класса. Эта функциональность бывает особенно полезна, когда нам хочется добавить в некоторый тип новый метод, но сам тип (класс или структуру) мы изменить не можем, поскольку у нас нет доступа к исходному коду. Либо если мы не можем использовать стандартный механизм наследования, например, если классы определенны с модификатором sealed.11. Пусть дан фрагмент кода определения оператора преобразования типа. Определить форму преобразования.

public static implicit operator Point2D(Point3D a)

{/* код*/;}

Выберите верное утверждение. Метод расширения может:
получать доступ к public членам расширяемого класса

получать доступ к protected членам расширяемого класса

получать доступ к internal членам расширяемого класса

быть объявлен в любом классе

быть без параметров

Выберите из списка неверное правило перегрузки операторов для C#.
префиксные операции ++ и – – перегружаются парами

операции сравнения перегружаются парами: == и != ; < и >;<= и >=

перегруженные операции обязаны возвращать значения

должны объявляться как protected

true и false можно перегружать

Ответы на 8 лабу ООП

Что такое обобщение (generic)?
Термин обобщение означает параметризированный тип.

Обобщения позволяют решить проблему упаковки и распаковки а также повысить производительность приложения и справится с проблемой безопасности типов.

нету

Как можно наложить определенное ограничение на параметр?

С помощью ключевого слова where T : (class, struct, name_class, name_class, new() – это что-то, что имеет конструктор без параметров).

Как можно наложить несколько ограничений на параметр?
Через ,

class Folf where T: class, new()

Перечислите все существующие ограничения на типы данных обобщения?
class,struct, конкретный класс или интерфейс, new()

6.тип Т может быть только А либо его потомком B

7.тип Т можеть быть только классом

8.тип Т может быть только структурой

Приведите примеры, когда обобщенный класс может действовать как базовый или производный класс.
Class Dog<T, V>: Folf (Folf - базовый)

T – параметр передаваемый базовому классу

V – параметр характерный только для производного класса0

Class Folf : Animal (Folf - производный)

В каких случаях в обобщениях может использоваться оператор default?
Когда в обобщении нужно присвоить пере менным некоторое начальное значение, то на прямую это сделать нельзя, поэтому используется ключевое слово default(T)

Он присваивает ссылочным типам значение null, а значимым типам 0.

Поясните как использовать статические переменные в обобщенных классах.
В обобщённых классах определённым образом создаётся набор статических членов и его можно инициализировать без создания объекта

Car

{

Public static T speed;

}

Car.speed = “fast”;

Car.speed = 50;

Приведите пример обобщенного интерфейса.
Interface Numbers

{

Void Show();

Void Add();

}

В чем отличие обобщенных классов от обобщенных структур?
Они похожи но структуры нельзя наследовать.

Какие классы для работы с файлами вы знаете? Приведите пример
File, fileInfo

С их помощью мы можем создавать, удалять, перемещать файлы, получать их свойства и многое другое.

Некоторые полезные методы и свойства класса FileInfo:

· CopyTo(path): копирует файл в новое место по указанному пути path

· Create(): создает файл

· Delete(): удаляет файл

· MoveTo(destFileName): перемещает файл в новое место

· Свойство Directory: получает родительский каталог в виде объекта DirectoryInfo

· Свойство DirectoryName: получает полный путь к родительскому каталогу

· Свойство Exists: указывает, существует ли файл

· Свойство Length: получает размер файла

· Свойство Extension: получает расширение файла

· Свойство Name: получает имя файла

· Свойство FullName: получает полное имя файла

Класс File реализует похожую функциональность с помощью статических методов:

· Copy(): копирует файл в новое место

· Create(): создает файл

· Delete(): удаляет файл

· Move: перемещает файл в новое место

· Exists(file): определяет, существует ли файл